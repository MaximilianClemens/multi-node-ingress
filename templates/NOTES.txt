üöÄ Multi-Node Ingress Controller erfolgreich installiert!

Verf√ºgbare Ingress Controller:
{{- range $controllerName, $controller := .Values.ingressControllers }}
{{- if $controller.enabled }}

üì° {{ $controllerName }}:
  - Node: {{ $controller.node }}
  - IP: {{ $controller.ip }}
  - Namespace: {{ $controller.namespace }}
  - IngressClass: {{ $controller.ingressClass }}
  - Endpoints:
    {{- range $controller.ports }}
    {{- if or (eq .name "http") (eq .name "https") }}
    ‚Ä¢ {{ .name | upper }}: {{ $controller.ip }}:{{ .nodePort }}
    {{- else }}
    ‚Ä¢ {{ .name | upper }}: {{ $controller.ip }}:{{ .nodePort }} ({{ .protocol }})
    {{- end }}
    {{- end }}
{{- end }}
{{- end }}

üåê Deployierte Services:
{{- range .Values.ingressServices }}
{{- if .enabled }}

üì¶ {{ .name }} ({{ .namespace }}):
  - Port: {{ .port }}
  - Hosts: {{ join ", " .hosts }}
  - Controller: {{ join ", " .ingressControllers }}
  - Zugriff √ºber:
    {{- range .ingressControllers }}
    {{- $controllerName := . }}
    {{- $controller := index $.Values.ingressControllers $controllerName }}
    {{- if $controller.enabled }}
    {{- range $controller.ports }}
    {{- if or (eq .name "http") (eq .name "https") }}
    ‚Ä¢ {{ .name | upper }}: {{ $controller.ip }}:{{ .nodePort }}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- end }}
{{- end }}
{{- end }}

üîß Verwaltungsbefehle:

Status pr√ºfen:
  kubectl get pods --all-namespaces -l app.kubernetes.io/name=ingress-nginx
  kubectl get ingress --all-namespaces
  kubectl get ingressclass

Logs anzeigen:
{{- range $controllerName, $controller := .Values.ingressControllers }}
{{- if $controller.enabled }}
  kubectl logs -n {{ $controller.namespace }} -l app.kubernetes.io/component=controller
{{- end }}
{{- end }}

Service hinzuf√ºgen:
1. Erweitern Sie die ingressServices in values.yaml:
   ingressServices:
     - name: "my-new-service"
       namespace: "default"
       port: 80
       enabled: true
       ingressControllers:
         - node01-public  # Oder beliebige andere Controller
       hosts:
         - "my-app.example.com"
       annotations:
         nginx.ingress.kubernetes.io/ssl-redirect: "true"

2. Chart upgraden:
   helm upgrade {{ .Release.Name }} . -f values.yaml

Controller hinzuf√ºgen:
1. Neuen Controller in ingressControllers definieren
2. Services k√∂nnen dynamisch an neue Controller gebunden werden
3. helm upgrade ausf√ºhren

üí° Tipps:
- Jeder Service kann an mehrere Controller gebunden werden
- Controller k√∂nnen verschiedene Ports und Protokolle unterst√ºtzen
- Private und √∂ffentliche Trennung √ºber verschiedene Controller
- Automatische IP-basierte und Host-basierte Routen