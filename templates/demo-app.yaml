{{- if .Values.demoApp.enabled }}
{{- $demoAppUsed := false }}
{{- range .Values.ingressServices }}
{{- if and .enabled (eq .name "demo-app") }}
{{- $demoAppUsed = true }}
{{- end }}
{{- end }}
{{- if $demoAppUsed }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app
  namespace: default
  labels:
    {{- include "multi-node-ingress.labels" . | nindent 4 }}
    app.kubernetes.io/component: demo-app
spec:
  replicas: {{ .Values.demoApp.replicas }}
  selector:
    matchLabels:
      app: demo-app
  template:
    metadata:
      labels:
        app: demo-app
        {{- include "multi-node-ingress.labels" . | nindent 8 }}
    spec:
      containers:
      - name: nginx
        image: {{ .Values.demoApp.image }}
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      volumes:
      - name: html
        configMap:
          name: demo-html
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - demo-app
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-html
  namespace: default
  labels:
    {{- include "multi-node-ingress.labels" . | nindent 4 }}
    app.kubernetes.io/component: demo-app
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Multi-Node Demo Service</title>
        <style>
            body { font-family: Arial, sans-serif; margin: 40px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; }
            .node-info { background: rgba(255,255,255,0.1); padding: 20px; border-radius: 10px; backdrop-filter: blur(10px); margin: 20px 0; }
            .endpoint { background: rgba(255,255,255,0.2); padding: 10px; margin: 5px 0; border-radius: 5px; }
            .controller { border-left: 4px solid #00ff88; padding-left: 15px; }
        </style>
    </head>
    <body>
        <h1>ðŸš€ Multi-Node Kubernetes Setup!</h1>
        <div class="node-info">
            <h2>Server Information</h2>
            <p><strong>Node:</strong> <span id="hostname"></span></p>
            <p><strong>Timestamp:</strong> <span id="timestamp"></span></p>
            <p><strong>Pod Node:</strong> <span id="pod-node"></span></p>
        </div>
        <div class="node-info">
            <h2>Available Ingress Controllers</h2>
            {{- range $controllerName, $controller := .Values.ingressControllers }}
            {{- if $controller.enabled }}
            <div class="controller">
                <h3>{{ $controllerName | title }}</h3>
                <p><strong>Node:</strong> {{ $controller.node }}</p>
                <p><strong>IP:</strong> {{ $controller.ip }}</p>
                {{- range $controller.ports }}
                {{- if or (eq .name "http") (eq .name "https") }}
                <div class="endpoint">{{ .name | upper }}: {{ $controller.ip }}:{{ .nodePort }}</div>
                {{- end }}
                {{- end }}
            </div>
            {{- end }}
            {{- end }}
        </div>
        <script>
            document.getElementById('hostname').textContent = window.location.hostname;
            document.getElementById('timestamp').textContent = new Date().toISOString();
            document.getElementById('pod-node').textContent = '${NODE_NAME}' || 'Unknown';
        </script>
    </body>
    </html>
---
apiVersion: v1
kind: Service
metadata:
  name: demo-app
  namespace: default
  labels:
    {{- include "multi-node-ingress.labels" . | nindent 4 }}
    app.kubernetes.io/component: demo-app
spec:
  selector:
    app: demo-app
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
  sessionAffinity: None
{{- end }}
{{- end }}