{{- range $controllerName, $controller := .Values.ingressControllers }}
{{- if $controller.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: {{ $controller.namespace }}
  labels:
    {{- include "multi-node-ingress.labels" $ | nindent 4 }}
    app.kubernetes.io/component: controller
    ingress.controller: {{ $controllerName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/instance: {{ include "ingress.instanceName" $controllerName }}
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/instance: {{ include "ingress.instanceName" $controllerName }}
        app.kubernetes.io/component: controller
    spec:
      serviceAccountName: nginx-ingress-serviceaccount
      nodeSelector:
        kubernetes.io/hostname: {{ $controller.node }}
      containers:
      - name: controller
        image: {{ $.Values.global.imageRegistry }}/{{ $.Values.global.ingressImage }}
        args:
        - /nginx-ingress-controller
        - --configmap=$(POD_NAMESPACE)/nginx-configuration
        - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
        - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
        - --annotations-prefix=nginx.ingress.kubernetes.io
        - --ingress-class={{ $controller.ingressClass }}
        - --controller-class={{ $controller.controllerClass }}
        - --election-id={{ $controller.electionId }}
        securityContext:
          allowPrivilegeEscalation: true
          runAsUser: 101
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        ports:
        {{- range $controller.ports }}
        - name: {{ .name }}
          containerPort: {{ .targetPort }}
          protocol: {{ .protocol }}
        {{- end }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
{{- end }}
{{- end }}